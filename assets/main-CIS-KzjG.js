import{c as m}from"./index-CdF3IWur.js";import{convertWithOpenCC as h}from"./openccConverter-CtI3b4IE.js";import{convertWithLLM as u,batchLLMConvert as p,symbolToString as v}from"./llmConverter-JBKQxYT3.js";async function d(f,n){const c=f.split(/\r?\n/),o=[],r=[],l=[];let i,s;typeof n=="function"?i=n:n&&(i=n.onProgress,s=n.batchLLMConvert);for(let t=0;t<c.length;t++){const e=c[t];if(e===""){o[t]="";continue}if(m(e)){i?.({current:t+1,total:c.length,type:"llm",line:e});const a=u(e,t);o[t]=a,r.push(t),l.push(a)}else i?.({current:t+1,total:c.length,type:"opencc",line:e}),o[t]=await h(e)}if(l.length>0){s?await s(l):await p(l);for(let t=0;t<r.length;t++){const e=r[t];o[e]=await v(l[t])}}return o.join(`
`)}export{d as processText};
